/*
 * __________________________________==================================____________________________________
 *
 * __________________________________==================================____________________________________
План занятия
1. switch
2. cycles
 */

/*
 * Теория
 * __________________________________==================================____________________________________
 *                                                  switch
 * __________________________________==================================____________________________________
 * switch  -->  условный оператор, кот предназначен для перебора множества условий. В ситуациях, когда нужно проверить
 * более 3 условий использование if-else выглядит громоздко, поэтому лучше заменить его на switch.
 * Недостатки switch -->
 * Невозможность вычислить логическое выражение, например:
 * if(age > 18 && age < 25){  -->  в if происходит вычисление логического выражения, аналогичная операция в switch невозможна.
 * System.out.println("Hello");
 * }
 * -------------Конструкция switch-------------
 * switch(переменная){
 * case:  --> значение переменной:
 * тут то, что выполняем
 * break; --> прекращение выполнения блока, не забывать ставить.
 * .
 * .  тут могут быть дополнительные кейсы (case)
 * .
 * case:  --> значение переменной:
 * тут то, что выполняем
 * break; --> прекращение выполнения блока, не забывать ставить.
 *
 * default:         --> отработает, если не выполнился ни один из case (аналог else)
 * То, что выполняется
 * }
 * __________________________________==================================____________________________________
 *                                                  Циклы
 * __________________________________==================================____________________________________
 * Циклы нужны для выполнения каких-то операций. В Java есть 3 вида циклов:
 * for
 * while
 * do-while
 * При этом все циклы взаимозаменяемы. Разные циклы удобно использовать для решения конкретных задач, например, цикл
 * while удобно использовать для бесконечных циклов.
 * -- Циклы управляются логическими конструкциями.
 * -- Существует понятие главного цикла --> цикл, в котором работает приложение, т.е бесконечный цикл, кот будет закончен
 * только по команде пользователя (Большинство программ имеют главный цикл, а условием завершения является закрытие
 * программы - нажатие на крестик).
 *
 * -- Бесконечный цикл - цикл, не имеющий условия автоматического завершения. Любая программа, которая ждет от пользователя команды
 * "закрыть" работает в бесконечном цикле.
 *
 * -- Главный цикл часто называют пользовательским циклом, также когда мы используем бесконечнй цикл, мы управляем
 * пользовательским (главным) потоком.
 *
 * --Циклы на английском называются loop.
 *
 * -- Конструкция цикла while:
 * while(условие){
 * То, что будет сделано
 * }
 * Шаг цикла называется итерацией
 *


 */
/*
 * Заметки
 * switch --> перебор некоторых состояний. Имеет название детерминированный конечный автомат (ДКА). Такая модель широко
 * применяеся при решении сложных задач, которые можно свести к набору случаев. Звучит страшно, но тема простая. ДКА
 * подробно описаны в книге Computer Science в 5 главе.
 *
 * Задача
         Чатбот на минималках
         В бесконечном цикле в метод поступают слова(String): Привет, Как дела?, Пока
         Ответ бота: Привет -> Здравствуйте!, Как дела -> Все отлично. Хотите ли еще что-нибудь узнать? Пока -> Хорошего дня
         При вводе Пока, выходим из приложения.
         Подсказка: Для сравнения строк использовать метод equals, например:
         String str;
         str.equals("Привет")  проверит равна ли строка Привет
         Решение
         1) Создать переменную для слов пользователя и переменную для слов бота
         2) Создать бесконечный цикл while и выходить из него при вводе слова  Пока - использовать break или return
         3) Создать метод(функцию) типа String, которая будет возвращать ответ бота, она должна принимать введенную переменную
         4) Вывести ответ.
 *
 */

import java.util.Scanner;

/*
 * Задачи:
 * 1) *Создать класс Human с полями рост, вес, пол, возраст. Создать массив Humans. Вывести только те объекты, которые
 * имеют возраст больше 18 и вес меньше 80, если возраст меньше 18, вывести пол объекта.
 * 2) Реализовать чтение целых чисел из консоли, если число больше или равно 18, вывести текст "Проходите"
 * */
public class Main {
    static Scanner sc = new Scanner(System.in);

    public static void main(String[] args) {
        System.out.println("введите число");
        int a = sc.nextInt();

        switch (a) {
            case 27:
                System.out.println("Welcome");
                break;

            case 7:
                System.out.println("Not welcome");
                break;

            default:
                System.out.println("Say hello");
        }
        System.out.println("введите второе число");
        int b = sc.nextInt();

        switch (b) {
            case 40:
                welcome();        // В этом примере вынесли операции в метод. Теперь можно использовать этот код многократно. Смотреть вызов метода welcome ниже
                break;

            case 30:
                notWelcome();
                break;

            default:
                sayHello();
        }
        System.out.println("Повторное использование метода welcome:");
        welcome();                    // Повторное использование метода

        int discountOption = sc.nextInt();

        switch (discountOption) {

            case 5:
                discount5();
                break;
            case 10:
                discount10();
                break;
            case 20:
                discount20();
                break;
            default:
                discounts();
        }

//        calculate();
//
//        output(10); // Метод для вывода чисел от 0 до указанного диапазона
//        output2(0, 15);

        //Задача: В бесконечном цикле в метод поступают слова (String): Привет, Как дела?, Пока
        //Ответ бота: Привет - Здравствуйте!, Как дела? - Все отлично. Хотите ли еще что-нибудь узнать?, Пока - Хорошего дня
        //Также при вводе пока - выходим из приложения.
        // Подсказка: Для сравнения строк использовать метод equals, например:
        // String str;
        // str.equals("Привет");


        bot();
    }
    public static void bot() {
        while (true) {
            System.out.println("Хотите ли еще что-нибудь узнать? \n" +
            "Пока \n" );



            String answer = sc.nextLine();
            String test = sc.next();
            answer.trim();
            switch (answer) {
                case "Привет":
                    answer = "Здравствуйте!";
                    break;

                case "Как дела?":
                answer = "Все отлично. Хотите ли еще что-нибудь узнать?";
                break;
                case "Пока":
                answer = "Хорошего дня!";
                    break;
                default: answer = "No!";
            }
            System.out.println(answer);
            if(answer.equals("Хорошего дня!")){
                break;
            }


        }
    }



//    public static void output2(int min, int max) { // --> почему-то не работает РАЗОБРАТЬСЯ
//        int z = 0;
//        while (z <= max) ;
//        System.out.println(z);
//        z++;
//    }
//    public static void output(int max){  // --> почему-то не работает РАЗОБРАТЬСЯ
//        int counter = 0;
//        while (counter <= max);    // --> пока счетчик меньше переданного числа, выводим счетчик и увеличиваем его на 1
//        System.out.println(counter);
//        counter++;  // --> увеличиваем счетчик, чтобы выйти из цикла.
//    }

        // Задача: считать, пока пользователь не захочет прервать выполнение
        // Решение: использовать циклы
        // Calculator-----------------------------
        public static void calculate () {
            while (true) {
                System.out.println("Желаете выйти? \n" +
                        "Да - y\n" +
                        "Нет - n");
                char exit = sc.next().charAt(0);
                if (exit == 'y'){
                    return;
                }
                System.out.println("Введите первое число: ");
                int num1 = sc.nextInt();
                System.out.println("Введите второе число: ");
                int num2 = sc.nextInt();
                System.out.println("Введите символ: ");

                char sign = sc.next().charAt(0);               // Получаем строку и берем ее первый символ

                double res = -1;                                // Переменную нужно инициализировать, -1 негласное значение для ошибки
                switch (sign) {
                    case '+':
                        res = sum(num1, num2);
                        break;
                    case '-':
                        res = sub(num1, num2);
                        break;
                    case '/':
                        res = div(num1, num2);
                        break;
                    case '*':
                        res = mul(num1, num2);
                        break;

                }
                System.out.println("Результат: " + num1 + " " + sign + " " + num2 + " = " + res);
            }
            }
            public static int mul ( int num1, int num2){
                return num1 * num2;
            }

            public static double div ( int num1, int num2){
                return (double) num1 / (double) num2;
            }

            public static int sub ( int num1, int num2){
                return num1 - num2;
            }

            public static int sum ( int num1, int num2){
                return num1 + num2;
            }





//          Задача: Сделать свой свич с вызовом методов в зависимости от условия


        public static void discounts () {
            System.out.println("Find newest adidas discounts!");
        }
        public static void discount5 () {
            System.out.println("Your discount 5%");
        }
        public static void discount10 () {
            System.out.println("Your discount 10%");
        }
        public static void discount20 () {
            System.out.println("Your discount 20%");
        }
        public static void welcome () {
            System.out.println("Welcome to my house, my dear friend!");
        }

        public static void notWelcome () {
            System.out.println("Not welcome");
        }

        public static void sayHello () {
            System.out.println("Say hello");
        }

}